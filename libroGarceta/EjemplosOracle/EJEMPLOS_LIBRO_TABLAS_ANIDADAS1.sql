CREATE TYPE TABLA_ANIDADA 
    AS TABLE OF DIRECCION; 
/
CREATE TABLE EJEMPLO_TABLA_ANIDADA 
(
 ID NUMBER(2),
 APELLIDOS VARCHAR2(35),
 DIREC  TABLA_ANIDADA
)
NESTED TABLE DIREC STORE AS DIREC_ANIDADA;

desc direc_anidada;
desc direccion;
desc tabla_anidada;


desc EJEMPLO_TABLA_ANIDADA ;
--INSERTAR DATOS

INSERT INTO EJEMPLO_TABLA_ANIDADA VALUES 
(1, 'RAMOS', 
  TABLA_ANIDADA (
    DIRECCION ('C/Los manantiales 5', 'GUADALAJARA', 19004),
    DIRECCION ('C/Los manantiales 10', 'GUADALAJARA', 19004),
    DIRECCION ('C/Av de Paris 25', 'CÁCERES', 10005),
    DIRECCION ('C/Segovia 23-3A', 'TOLEDO', 45005)
  )
);

INSERT INTO EJEMPLO_TABLA_ANIDADA VALUES (2, 'MARTÍN', 
  TABLA_ANIDADA (
    DIRECCION ('C/Huesca 5', 'ALCALÁ DE H', 28804),
    DIRECCION ('C/Madrid 20', 'ALCORCÓN', 28921)
  )
);

--Se inserta el id, el nombre y la tabla anidada vacía:

insert into EJEMPLO_TABLA_ANIDADA 
    values (5, 'PEREZ', TABLA_ANIDADA());


insert into EJEMPLO_TABLA_ANIDADA 
    values (15, 'PEREZ', null);
    
--CONSULTAS

SELECT * FROM EJEMPLO_TABLA_ANIDADA;
--
--CONSULTA TODAS LAS DIRECCIONES DE CADA ID
--SI LA TABLA ANIDADA ES NULA NOSE MUESTRAN LAS FILAS
SELECT  ID, APELLIDOS, DIRECCION.* 
FROM EJEMPLO_TABLA_ANIDADA,  TABLE(DIREC) DIRECCION;

--DIRECCIONES DEL ID 1     
SELECT  ID, APELLIDOS, DIRECCION.* 
FROM EJEMPLO_TABLA_ANIDADA, TABLE(DIREC) DIRECCION 
WHERE ID=1;

--SOLO LA CALLE
SELECT  ID, APELLIDOS, DIRECCION.CALLE 
FROM EJEMPLO_TABLA_ANIDADA, TABLE(DIREC) DIRECCION 
WHERE ID=1;

--USANDO CURSOR PARA SELECCIONAR CALLES
-- POR CADA APELLIDO SUS CALLES, 1 FILA POR APELLIDO
SELECT ID, APELLIDOS,  CURSOR(SELECT TT.CALLE  FROM TABLE(DIREC) TT )
FROM EJEMPLO_TABLA_ANIDADA ;

--MAS CONSULTAS CON CURSOR

SELECT ID, APELLIDOS, CURSOR(SELECT count(TT.CALLE)
                     FROM TABLE(T.DIREC) TT)
FROM EJEMPLO_TABLA_ANIDADA T;

SELECT ID, APELLIDOS, count(*)
FROM EJEMPLO_TABLA_ANIDADA T, TABLE(T.DIREC)
GROUP BY ID, APELLIDOS;

----Si queremos seleccionar el número 
--de direcciones de cada persona DE LA CIUDAD DE GUADALAJARA
SELECT ID, APELLIDOS, CURSOR (
                      SELECT count(*) 
                      FROM  TABLE(DIREC)  
                      where ciudad ='GUADALAJARA')
FROM EJEMPLO_TABLA_ANIDADA;
--
--apellidos que tienen 2 direcciones en la ciudad de GUADALAJARA
SELECT ID, APELLIDOS, CURSOR (
                      SELECT count(*) 
                      FROM  TABLE(DIREC)  
                      where ciudad ='GUADALAJARA')
FROM EJEMPLO_TABLA_ANIDADA
     where (SELECT count(*) FROM TABLE(DIREC)              
            where ciudad ='GUADALAJARA') = 2;

--
SELECT ID, APELLIDOS, 
   (SELECT count(*) FROM 
        TABLE(EJEMPLO_TABLA_ANIDADA.DIREC)  
                 where ciudad ='GUADALAJARA')
FROM EJEMPLO_TABLA_ANIDADA
  where (SELECT count(*) FROM 
          TABLE(EJEMPLO_TABLA_ANIDADA.DIREC)  
         where ciudad ='GUADALAJARA') = 2;

--

--Utilizando la tabla anidada en la consulta, 
--la consulta resulta más sencilla:
SELECT ID, APELLIDOS, count(*)
FROM EJEMPLO_TABLA_ANIDADA T, table(T.DIREC) tt
    where tt.ciudad ='GUADALAJARA' 
 group by ID, APELLIDOS 
 having count(*) = 2;

--acceso a filas de la columna que es tabla anidada
-- LAS CALLES DEL ID 1
SELECT CALLE, CIUDAD,CODIGO_POST  FROM THE 
    ( SELECT DIREC 
      FROM EJEMPLO_TABLA_ANIDADA wherE ID=1 )   
      ;
WHERE CIUDAD='GUADALAJARA';
--
DESC DIRECCION;
SELECT  CALLE FROM THE 
    (SELECT T.DIREC 
    FROM EJEMPLO_TABLA_ANIDADA T WHERE ID=1) ;


-- EL SIGUIENTE EJEMPLO OBTIENE LAS DIRECCIONES COMPLETAS DEL IDENTIFIDOR 1 
SELECT  ID, APELLIDOS, DIRECCION.* 
FROM EJEMPLO_TABLA_ANIDADA,
    TABLE(DIREC) DIRECCION ;

-- SOLO DEL ID 1
SELECT  ID, DIRECCION.* 
FROM EJEMPLO_TABLA_ANIDADA, TABLE(DIREC) DIRECCION 
;--WHERE ID=1;

 SELECT  ID, APELLIDOS, DIRECCION.* 
     FROM EJEMPLO_TABLA_ANIDADA , TABLE(DIREC) DIRECCION;

--------------------------------------------------
--INSERCION EN LA TABLA
------------------------------------------------------------
INSERT INTO TABLE 
  (SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA 
               WHERE ID = 1) 
VALUES (DIRECCION
('C/Los manantiales 15', 'GUADALAJARA', 19005)
  );

 SELECT  ID, APELLIDOS, DIRECCION.* 
     FROM EJEMPLO_TABLA_ANIDADA , TABLE(DIREC) DIRECCION
     WHERE ID=1;
	 
--INSERTAR UNA DIRECCION AL IDENTIFICADOR SIN DIRECCIONES
--(NO TIENE VALOR NULO)
SELECT * FROM EJEMPLO_TABLA_ANIDADA;
--
INSERT INTO TABLE 
  (SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA WHERE ID = 5) 
VALUES (DIRECCION
('C/Sevilla 24, 1A', 'GUADALAJARA', 19003) );

--INSERTAR EN COLUMNA CON VALOR NULO
INSERT INTO EJEMPLO_TABLA_ANIDADA VALUES (6,'GIL', null);

INSERT INTO TABLE  --ERROR porque la columna es nula
(SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA WHERE ID = 6) 
VALUES (DIRECCION ('C/Madrid 5', 'OROPESA', 45560));

--SI LA COLUMNA ES NULA HACER UPDATE PARA LA PRIMERA DIRECCION
Update EJEMPLO_TABLA_ANIDADA
set direc =
  TABLA_ANIDADA (DIRECCION ('C/Madrid 5', 'OROPESA', 45560))
Where ID = 6 ;
--añado otra direccion
INSERT INTO TABLE 
  (SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA WHERE ID = 6) 
VALUES (DIRECCION
('C/Toledo 34, 8A', 'GUADALAJARA', 19003) );

--
DESC USER_NESTED_TABLES;
SELECT * FROM USER_NESTED_TABLES;

----------------------------------------
--modificacion
     
UPDATE TABLE 
(SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA WHERE ID = 1) PRIMERA
SET VALUE(PRIMERA) = DIRECCION ('C/Pilon 11', 'TOLEDO', 45589)
WHERE
VALUE(PRIMERA)=DIRECCION('C/Los manantiales 5', 'GUADALAJARA', 19004);

select *  from the (
SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA e WHERE ID = 1);
ROLLBACK;
--Modificamos (para el ID 1) todas las direcciones que tengan la ciudad de
--GUADALJARA, le damos el valor MADRID:

UPDATE TABLE 
(SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA WHERE ID = 1) PRIMERA
SET PRIMERA.ciudad =  'madrid'
WHERE
PRIMERA.ciudad='GUADALAJARA';

--BORRADO
DELETE FROM TABLE 
(SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA WHERE ID = 1) PRIMERA
WHERE
VALUE(PRIMERA)=DIRECCION('C/Los manantiales 10', 'GUADALAJARA', 19004);

ROLLBACK;
-- BORRAMOS  TODAS LAS DIRECCIONES CON CIUDAD = 'GUADALAJARA'
DELETE FROM TABLE 
(SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA WHERE ID = 1) PRIMERA
WHERE
 PRIMERA.CIUDAD ='GUADALAJARA';

--OBTENER SOLO LAS DIRECCIONES DE GUADALAJARA
SELECT CALLE, CIUDAD, CODIGO_POST 
FROM THE( SELECT DIREC FROM EJEMPLO_TABLA_ANIDADA WHERE ID =1)
WHERE CIUDAD ='GUADALAJARA';
--------------------------------------------
---PROCEDIMIENTO
CREATE OR REPLACE PROCEDURE VER_DIREC(IDENT NUMBER) AS
  CURSOR C1 IS 
        SELECT CALLE FROM THE 
       (SELECT T.DIREC FROM EJEMPLO_TABLA_ANIDADA T WHERE ID = IDENT);
BEGIN
  FOR I IN C1 LOOP
    DBMS_OUTPUT.PUT_LINE(I.CALLE);
  END LOOP;
END VER_DIREC;
/
--Probando el procedimiento
BEGIN
  VER_DIREC(1);
END;
/


-----

CREATE OR REPLACE FUNCTION EXISTE_DIREC 
   (IDEN NUMBER, PCALLE VARCHAR2,  PCIU VARCHAR2, CP NUMBER)
RETURN VARCHAR2 AS
  IDT NUMBER;
  TABLAANID TABLA_ANIDADA;
  CUENTA NUMBER;
BEGIN
 --COMPROBAR SI EXISTE ID, 
   SELECT COUNT(ID) INTO CUENTA 
       FROM EJEMPLO_TABLA_ANIDADA WHERE ID = IDEN;
   IF CUENTA = 0 THEN
       RETURN 'NO EXISTE EL ID: '||IDEN||', EN LA TABLA'; 
   END IF ;
   IF CUENTA > 1 THEN
      RETURN 'EXISTEN VARIOS REGISTROS CON EL MISMO  ID: '||IDEN ;
   END IF;
   
 --EL ID EXISTE, COMPROBAR SI LA CALLE EXISTE:
  SELECT ID INTO IDT
            FROM EJEMPLO_TABLA_ANIDADA, TABLE(DIREC)
            WHERE ID= IDEN 
            AND UPPER(CALLE)=UPPER(PCALLE) 
            AND UPPER(CIUDAD) = UPPER(PCIU) 
            AND CODIGO_POST= CP;
            
  RETURN ('LA DIRECCIÓN : '||PCALLE || '*' ||PCIU
              || '*' || CP  || 'YA EXISTE PARA ESE ID: '||IDEN);   
EXCEPTION
WHEN NO_DATA_FOUND THEN  
  RETURN 'NO EXISTE LA DIRECCION : '||PCALLE || '*' ||PCIU
              || '*' || CP  || ' PARA EL ID: '||IDEN;
END EXISTE_DIREC;
/


BEGIN
  DBMS_OUTPUT.PUT_LINE(EXISTE_DIREC(1, 'C/Madrid 5', 'OROPESA', 45560));
  DBMS_OUTPUT.PUT_LINE(EXISTE_DIREC(1,'C/Los manantiales 5', 'GUADALAJARA', 19004));
  DBMS_OUTPUT.PUT_LINE(EXISTE_DIREC(5,'C/Los manantiales 5', 'GUADALAJARA', 19004));  
END;
/

--ACTIVIDAD 7--

---------------------FIN--------------------------------

